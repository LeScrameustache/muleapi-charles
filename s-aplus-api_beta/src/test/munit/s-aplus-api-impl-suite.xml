<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="s-aplus-api-impl-suite.xml" />
	<munit:test name="get:\getAccount:s-aplus-api-config-test" doc:id="3500a715-488e-4cf3-8c4b-01f290b3fcf9" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Request" doc:id="7ca25713-14e5-4b4c-9ec1-32ba34914e4f" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="4d68a9c0-d292-49f6-b100-915c7252317a" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://getgetAccountsaplusapiconfigtest1\mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://getgetAccountsaplusapiconfigtest1\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getgetAccountsaplusapiconfigtest1\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="25f3bb24-6c22-4dc3-a223-66be4e99fd96" >
				<munit:payload value="#[readUrl('classpath://getgetAccountsaplusapiconfigtest1\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getgetAccountsaplusapiconfigtest1\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getgetAccountsaplusapiconfigtest1\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\getAccount:s-aplus-api-config" doc:id="1483e237-af4a-415d-ba59-e3f59ca45ef9" name="get:\getAccount:s-aplus-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="278a06a7-446a-496d-9c4e-ae50b3363b10" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getgetAccountsaplusapiconfigtest1::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\getAccount\(id):s-aplus-api-config-test" doc:id="3c86fa56-e975-49c4-9c82-eaa6a3258e16" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="06405d27-5999-4f27-8f21-37fc841d5e35" >
				<munit:payload value="#[readUrl('classpath://getgetAccountidsaplusapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getgetAccountidsaplusapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getgetAccountidsaplusapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\getAccount\(id):s-aplus-api-config" doc:id="52043057-4616-4394-a8c5-1302420b7741" name="get:\getAccount\(id):s-aplus-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="6616e9f7-74b1-42a3-998b-dd88646bf1f0" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getgetAccountidsaplusapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
